[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Logger Package 1",
    "section": "",
    "text": "This package helps to import Hobo logger files into R. Currenltly supported are the Pendant temperature and temperature and light intensity loggers and the Temperature Pro V2. The package can be used to combine logger data from multiple deployments at different sites and filters the data using the time of deployment and retrieval. Basic plotting allows error checking.\nThe current version of the package is 0.1 and was published on 21.06.2023."
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Logger Package 1",
    "section": "\n2 Prerequisites",
    "text": "2 Prerequisites\n\n2.1 File Export\nThe .hobo files have to be exported to .csv using HOBOware. With the paid version HOBOware Pro it is possible to bulk export multiple .hobo files (Tools > Bulk File Export) . The export settings can be changed in the HOBOware settings in the “General” tab in “Export settings” and have to be as follows:\n\n\n\n\n\n\nName\nSetting\n\n\n\nExport file type\nText (.txt or .csv)\n\n\nExport table data column separator\nComma (,)\n\n\nInclude line number column\nNo\n\n\nInclude plot title in header\nNo\n\n\nAlways show fractional seconds\nNo\n\n\nSeparate date and time into two columns\nNo\n\n\nNo quotes or commas in headings, properties in parenthesis\nNo\n\n\nInclude logger serial number\nYes\n\n\nInclude sensor serial number or label if available\nYes\n\n\nDate formal\nY M D\n\n\nDate seperator\nDash (-)\n\n\nTime format\n24-Hour\n\n\nPositive number format\n1,234.56\n\n\nNegative number format\n-123\n\n\nInclude plot details in exported file\nNo\n\n\n\nAdditionally, the computer language has to be English and HOBOware has to use SI units.\nI store the exported .csv files in the RStudio project folder under /data/raw_csv. I recommend to also keep a copy of the original .hobo files, e.g. under /data/raw_hobo.\n\n2.2 Logger Metadata\nAn Excel table can be used to store information about the logger, e.g. to which site it was deployed, at what depth, and when it was deployed and retrieved. Here is an example for such a table. This file contains two tabs: active for the loggers that are currently deployed and retrieved for the loggers that were already retrieved. Necessary columns are\n\nfilename: The file name of the .csv file. I add the date of the retrieval before the label that was set in HOBOware, e.g. 2023_06_01_Site1_Depth2.csv.\ndeployed: Date and time of the deployment of the logger. In Excel, use “Custom” format with type TT.MM.JJ hh:mm.\nretrieved: Date and time of the retrieval of the logger. The cell format should be as for deployed.\n\nThe other information is optional but adding the site name, depth, battery state, logged parameters, logging interval, etc. will help to keep track of the loggers. Additionally, I use the logger serial number (column SN) as an ID.\nI store this Excel file in the RStudio project folder under /data."
  },
  {
    "objectID": "index.html#install-package",
    "href": "index.html#install-package",
    "title": "Logger Package 1",
    "section": "\n3 Install Package",
    "text": "3 Install Package\nThis can be done with the install_github() function of the devtools package:\n\nlibrary(devtools)\ndevtools::install_github(\"andieich/Logger\")\n\nNow, the package can be loaded:\n\nlibrary(Logger)"
  },
  {
    "objectID": "index.html#use-package",
    "href": "index.html#use-package",
    "title": "Logger Package 1",
    "section": "\n4 Use Package",
    "text": "4 Use Package\n\n4.1 Summary\nIn short, the logger metadata from the Excel file is used to import all logger .csv files, filter the data by the time of deployment and retrieval and adds the additional metadata, e.g. site name, depth, etc. All imported files will be combined to a data.frame in the “long” format so it can be easily used with e.g. ggplot(). Finally, some ways to visualize and summarize the data are shown.\n\n4.2 Load packages\nThese packages will be used in this example:\n\nlibrary(tidyverse)  # for dplyr, ggplot, magrittr, etc.\nlibrary(lubridate)  # to facilitate date formatting\nlibrary(here)       # for relative file paths\n\n\n\n\n\n4.3 Read Logger Metadata\nThe Excel file containing information on the deployment and retrieval times of the logger has to be imported to R. To do so, read_loggerinfo() can be used.\n\nloggerinfo <- read_loggerinfo(here::here(\"data/logger_info.xlsx\"))\n\n\n\n\n\n\n SN \n    type \n    site \n    habitat \n    replicate \n    Batt% \n    BattV \n    intervall (h) \n    parameters \n    started \n    memory full \n    name/label \n    deployed \n    spot \n    retrieved \n    battery end \n    ok \n    filename \n    redeployed \n    comment \n  \n\n\n 21086840 \n    Pendant \n    E2B \n    deep \n    1 \n    0.83 \n    3.06 \n    1 \n    L, T \n    2023-03-01 10:53:00 \n    2026-06-17 22:53:00 \n    E2B_deep_1 \n    2023-03-01 15:30:00 \n    2A \n    2023-06-16 08:00:00 \n    NA \n    NA \n    2023_06_16_E2B_deep_1.csv \n    no \n    NA \n  \n\n 21086844 \n    Pendant \n    E2B \n    shallow \n    2 \n    1 \n    3.08 \n    1 \n    L, T \n    2023-03-16 12:53:00 \n    2026-07-03 00:53:00 \n    E2B_shallow_2 \n    2023-03-16 17:30:00 \n    rebar 2 \n    2023-06-16 08:00:00 \n    NA \n    NA \n    2023_06_16_E2B_shallow_2.csv \n    no \n    NA \n  \n\n 21103103 \n    Pendant \n    Temae \n    deep \n    1 \n    0.9 \n    3.01 \n    1 \n    L, T \n    2023-03-08 08:41:00 \n    2026-06-24 20:41:00 \n    Temae_deep_1 \n    2023-03-08 15:30:00 \n    2A \n    2023-06-19 08:00:00 \n    NA \n    NA \n    2023_06_19_Temae_deep_1.csv \n    no \n    NA \n  \n\n\n\n\nThe data of all loggers in this table will be imported and merged in the next step. If you want, you can therefore filter loggerinfo, e.g. by site\n\nloggerinfo_sel1 <- loggerinfo %>% \n  dplyr::filter(site == \"E2B\")\n\n\n\n\n\n\n SN \n    type \n    site \n    habitat \n    replicate \n    Batt% \n    BattV \n    intervall (h) \n    parameters \n    started \n    memory full \n    name/label \n    deployed \n    spot \n    retrieved \n    battery end \n    ok \n    filename \n    redeployed \n    comment \n  \n\n\n 21086840 \n    Pendant \n    E2B \n    deep \n    1 \n    0.83 \n    3.06 \n    1 \n    L, T \n    2023-03-01 10:53:00 \n    2026-06-17 22:53:00 \n    E2B_deep_1 \n    2023-03-01 15:30:00 \n    2A \n    2023-06-16 08:00:00 \n    NA \n    NA \n    2023_06_16_E2B_deep_1.csv \n    no \n    NA \n  \n\n 21086844 \n    Pendant \n    E2B \n    shallow \n    2 \n    1 \n    3.08 \n    1 \n    L, T \n    2023-03-16 12:53:00 \n    2026-07-03 00:53:00 \n    E2B_shallow_2 \n    2023-03-16 17:30:00 \n    rebar 2 \n    2023-06-16 08:00:00 \n    NA \n    NA \n    2023_06_16_E2B_shallow_2.csv \n    no \n    NA \n  \n\n\n\n\nor by the deployment time:\n\nloggerinfo_sel2 <- loggerinfo %>% \n  dplyr::filter(deployed >= lubridate::as_date(\"2023-03-08\") )\n\n\n\n\n\n\n SN \n    type \n    site \n    habitat \n    replicate \n    Batt% \n    BattV \n    intervall (h) \n    parameters \n    started \n    memory full \n    name/label \n    deployed \n    spot \n    retrieved \n    battery end \n    ok \n    filename \n    redeployed \n    comment \n  \n\n\n 21086844 \n    Pendant \n    E2B \n    shallow \n    2 \n    1 \n    3.08 \n    1 \n    L, T \n    2023-03-16 12:53:00 \n    2026-07-03 00:53:00 \n    E2B_shallow_2 \n    2023-03-16 17:30:00 \n    rebar 2 \n    2023-06-16 08:00:00 \n    NA \n    NA \n    2023_06_16_E2B_shallow_2.csv \n    no \n    NA \n  \n\n 21103103 \n    Pendant \n    Temae \n    deep \n    1 \n    0.9 \n    3.01 \n    1 \n    L, T \n    2023-03-08 08:41:00 \n    2026-06-24 20:41:00 \n    Temae_deep_1 \n    2023-03-08 15:30:00 \n    2A \n    2023-06-19 08:00:00 \n    NA \n    NA \n    2023_06_19_Temae_deep_1.csv \n    no \n    NA \n  \n\n 21236989 \n    Pendant \n    Temae \n    deep \n    2 \n    1 \n    3.12 \n    1 \n    L, T \n    2023-03-08 08:42:00 \n    2026-06-24 20:42:00 \n    Temae_deep_2 \n    2023-03-08 15:30:00 \n    2A \n    2023-06-19 08:00:00 \n    NA \n    NA \n    2023_06_19_Temae_deep_2.csv \n    yes \n    NA \n  \n\n\n\n\n\n4.4 Import logger .csv files\nNow, the actual data can be imported. To do so, loggerinfo, that was just imported, has to be provided to the read_loggerfiles() function:\n\nread_loggerfiles(loggerinfo, check_SN = FALSE)\n\nThe function\nIf you did not use the serial number (SN) in loggerinfo or do not want to chack the SN provided in loggerinfo against the SN stored in the logger .csv file, set check_SN to FALSE:\n\nread_loggerfiles(loggerinfo, check_SN = FALSE)\n\nIf your logger .csv files are not stored in /data/raw_csv, you have to specify the folder:\n\nread_loggerfiles(loggerinfo, folder = \"your_folder\")"
  }
]